---
swagger: '2.0'
info:
  description: '"Spring Boot REST API for Online Store"'
  version: 1.0.0
  title: Spring Boot REST API
  license:
    name: Apache License Version 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0"
host: localhost:8080
basePath: "/"
tags:
- name: roulette-controller
  description: Roulette Controller
paths:
  "/api/bet":
    post:
      tags:
      - roulette-controller
      summary: createBet
      operationId: createBetUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - in: body
        name: viewBetModel
        description: viewBetModel
        required: true
        schema:
          "$ref": "#/definitions/ViewBetModel"
      - name: User
        in: header
        description: User
        required: true
        type: integer
        format: int64
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  "/api/ping":
    get:
      tags:
      - roulette-controller
      summary: index
      operationId: indexUsingGET
      produces:
      - "*/*"
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  "/api/roulette":
    get:
      tags:
      - roulette-controller
      summary: findAllRoulettes
      operationId: findAllRoulettesUsingGET
      produces:
      - "*/*"
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/Roulette"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  "/api/roulette/close/{id}":
    get:
      tags:
      - roulette-controller
      summary: closeRoulette
      operationId: closeRouletteUsingGET
      produces:
      - "*/*"
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/Bet"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  "/api/roulette/open/{id}":
    put:
      tags:
      - roulette-controller
      summary: openRoulette
      operationId: openRouletteUsingPUT
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  "/api/roulette/{id}":
    post:
      tags:
      - roulette-controller
      summary: createRoulette
      operationId: createRouletteUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
definitions:
  Bet:
    type: object
    properties:
      betColor:
        type: string
      betDate:
        type: string
        format: date-time
      betNumber:
        type: integer
        format: int64
      betValue:
        type: number
        format: double
      id:
        type: integer
        format: int64
      rouletteId:
        type: integer
        format: int64
      roundId:
        type: integer
        format: int64
      userId:
        type: integer
        format: int64
    title: Bet
  Roulette:
    type: object
    properties:
      createAt:
        type: string
        format: date-time
      id:
        type: integer
        format: int64
      state:
        type: string
    title: Roulette
  ViewBetModel:
    type: object
    properties:
      betColor:
        type: string
      betNumber:
        type: integer
        format: int64
      betValue:
        type: number
        format: double
      rouletteId:
        type: integer
        format: int64
    title: ViewBetModel
